#include<bits/stdc++.h>
using namespace std;
int n,m;
vector<pair<int,pair<int,int> > > v;
int p[100007],sizel[100007];
long long int suml[100007];
const int MOD = 1000000000;

int root(int x)
{
    while(p[x]!=x)
    {
        p[x]=p[p[x]];
        x=p[x];
    }
    return x;
}

void unionl(int a,int b)
{
    int pl=root(a);
    int ql=root(b);
    if(sizel[pl]>=sizel[ql])
        {sizel[pl]+=sizel[ql];
       p[ql]=pl;}
       else
       {
           sizel[ql]+=sizel[pl];
           p[pl]=ql;
       }
}
int main()
{
  cin>>n>>m;
  for(int i=0;i<m;i++)
  {
   int a,b,c;
   cin>>a>>b>>c;
   v.push_back({c,{a,b}});
  }
  sort(v.begin(),v.end());
  for(int i=0;i<100007;i++)
  {
   p[i]=i;
   sizel[i]=1;
  }
  long long int res=0;
  for(int i=0;i<v.size();i++)
  {
   suml[i]=v[i].first+(i>0?suml[i-1]:0);
  }
  for(int i=v.size()-1;i>=0;i--)
  {
   int a=v[i].second.first;
   int b=v[i].second.second;
   int c=v[i].first;
   int pa=root(a);
   int pb=root(b);
   if(pa!=pb)
   {
    long long int sa=sizel[pa];
    long long int sb=sizel[pb];
    res+=(sa*sb)*suml[i];
    if(res > MOD)
    res %= MOD;
    unionl(a,b);
   }
  }
  cout<<res<<endl;
}
